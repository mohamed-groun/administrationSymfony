<?php

namespace AppBundle\Repository;

/**
 * CongeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CongeRepository extends \Doctrine\ORM\EntityRepository
{
    public function statcongatt()
    {
        
        return $this->createQueryBuilder('cg')
        ->select(' COUNT(cg.retour) as retour')
       ->where('cg.retour = 0')
       ->getQuery()
       ->getScalarResult();
    }

    public function statcongacc()
    {
        
        return $this->createQueryBuilder('cg')
        ->select(' COUNT(cg.retour) as retour')
       ->where('cg.retour = 1')
       ->getQuery()
       ->getScalarResult();
    }
    public function statcongruf()
    {
        
        return $this->createQueryBuilder('cg')
        ->select(' COUNT(cg.retour) as retour')
       ->where('cg.retour = 2')
       ->getQuery()
       ->getScalarResult();
    }

    public function statcongTotal()
    {
        
        return $this->createQueryBuilder('cg')
        ->select(' COUNT(cg.retour) as retourtotal')
       ->getQuery()
       ->getScalarResult();
    }

    public function searchcong($poste,$status)
    {
        
        return $this->createQueryBuilder('cr')
        ->select('cr')
       ->where('cr.poste =:poste')
       ->andWhere('cr.retour =:status')
       ->setParameter('status', $status)     
       ->setParameter('poste', $poste) 
       ->getQuery()
       ->getScalarResult();
    }
	
	
	public function triCong($poste,$status,$now)
    {
        return $this->createQueryBuilder('co')
            ->select('co')
            ->where('co.poste like :deprt')
            ->andwhere('co.retour like :niv')
            ->andwhere('co.dateFin > :now')
            ->setParameter('now',$now)
            ->setParameter('deprt', '%'.$poste.'%')
            ->setParameter('niv', '%'.$status.'%')
          
            ->getQuery()
            ->getResult();
    }
	
	 public function FindOrderBy()
    {
        
        return $this->createQueryBuilder('cg')
        ->select('cg')
        ->orderBy('cg.id', 'DESC')
        ->getQuery()
        ->getResult();
    }
	    public function FindOrderByD($now)
    {
        
        return $this->createQueryBuilder('cg')
        ->select('cg')
        ->orderBy('cg.id', 'DESC')
        ->where('cg.dateFin > :now')
        ->setParameter('now',$now)
        ->getQuery()
        ->getResult();
    }
        public function print($id)
    {
        
        return $this->getEntityManager()
        ->createQuery(
            'update  AppBundle:Conge p SET p.print=1 where p.id=:id '
        )
        ->setParameter('id', $id) 
        ->getResult();
    }
    public function triCongtotal($date1,$date2,$poste)
    {
        return $this->createQueryBuilder('co')
            ->select('co')
            ->where('co.dateDebut BETWEEN :from AND :to')
            ->andwhere('co.poste like :poste')
            ->orderBy('co.nom')
            ->setParameter('from',$date1)
            ->setParameter('to',$date2)
            ->setParameter('poste', '%'.$poste.'%')
            ->getQuery()
            ->getResult();
    }
}
