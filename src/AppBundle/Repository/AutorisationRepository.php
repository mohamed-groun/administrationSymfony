<?php

namespace AppBundle\Repository;

/**
 * AutorisationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AutorisationRepository extends \Doctrine\ORM\EntityRepository
{
    public function statcongatt()
    {
        
        return $this->createQueryBuilder('cg')
        ->select(' COUNT(cg.retour) as retour')
       ->where('cg.retour = 0')
       ->getQuery()
       ->getScalarResult();
    }

    public function statcongacc()
    {
        
        return $this->createQueryBuilder('cg')
        ->select(' COUNT(cg.retour) as retour')
       ->where('cg.retour = 1')
       ->getQuery()
       ->getScalarResult();
    }
    public function statcongruf()
    {
        
        return $this->createQueryBuilder('cg')
        ->select(' COUNT(cg.retour) as retour')
       ->where('cg.retour = 2')
       ->getQuery()
       ->getScalarResult();
    }

    public function statcongTotal()
    {
        
        return $this->createQueryBuilder('cg')
        ->select(' COUNT(cg.retour) as retourtotal')
       ->getQuery()
       ->getScalarResult();
    }

    public function searchcong($poste,$status)
    {
        
        return $this->createQueryBuilder('cr')
        ->select('cr')
       ->where('cr.poste =:poste')
       ->andWhere('cr.retour =:status')
       ->setParameter('status', $status)     
       ->setParameter('poste', $poste) 
       ->getQuery()
       ->getScalarResult();
    }
	    public function triAutor($poste,$status,$managers,$now)
    {
        return $this->createQueryBuilder('us')
            ->select('us')
            ->where('us.poste like :deprt')
            ->andwhere('us.retour like :niv')
            ->andwhere('us.manager like :fonct')
            ->andwhere('us.dateDebut > :now')
            ->setParameter('now',$now)
            ->setParameter('deprt', '%'.$poste.'%')
            ->setParameter('fonct', '%'.$managers.'%')
            ->setParameter('niv', '%'.$status.'%')
          
            ->getQuery()
            ->getResult();
    }
	  public function findAlllimteDate($now)
    {
        
        return $this->createQueryBuilder('cg')
        ->select('cg')
        ->orderBy('cg.id', 'DESC')
        ->where('cg.dateDebut > :now')
        ->setParameter('now',$now)
        ->getQuery()
        ->getResult();
    }
	
	
    public function triAutorTotale($poste,$status,$managers)
    {
        return $this->createQueryBuilder('us')
            ->select('us')
            ->where('us.poste like :deprt')
            ->andwhere('us.retour like :niv')
            ->andwhere('us.manager like :fonct')

            ->setParameter('deprt', '%'.$poste.'%')
            ->setParameter('fonct', '%'.$managers.'%')
            ->setParameter('niv', '%'.$status.'%')

            ->getQuery()
            ->getResult();
    }
	    public function print($id)
    {

        return $this->getEntityManager()
            ->createQuery(
                'update  AppBundle:Autorisation p SET p.print=1 where p.id=:id '
            )
            ->setParameter('id', $id)
            ->getResult();
    }
}
